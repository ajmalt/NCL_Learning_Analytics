leavingSurveyData$last_completed_week_number <- as.character(leavingSurveyData$last_completed_week_number)
class(leavingSurveyData$last_completed_week_number)
head(leavingSurveyData)
#concatenate character columns (replace values in last_completed_step with characters)
x <- paste(leavingSurveyData$last_completed_week_number, leavingSurveyData$last_completed_step_number, sep = ".")
x
class(x)
#concatenate character columns (replace values in last_completed_step with characters)
leavingSurveyData$last_completed_step
class(leavingSurveyData$last_completed_step)
leavingSurveyData$last_completed_step <- paste(leavingSurveyData$last_completed_week_number, leavingSurveyData$last_completed_step_number, sep = ".")
#concatenate character columns (replace values in last_completed_step with characters)
leavingSurveyData$last_completed_step
class(leavingSurveyData$last_completed_step)
leavingSurveyData$last_completed_step <- na_if(leavingSurveyData$last_completed_step, "NA.NA") #replace "NA.NA" with NA (NULL)
leavingSurveyData$last_completed_step
class(leavingSurveyData$last_completed_step)
#leavingSurveyData$last_completed_step
#class(leavingSurveyData$last_completed_step)
head(leavingSurveyData)
#remove redundant datasets
rm(cyber.security.4.leaving.survey.responses, cyber.security.5.leaving.survey.responses,
cyber.security.6.leaving.survey.responses, cyber.security.7.leaving.survey.responses)
View(leavingSurveyData)
# Preprocessing script 01-D
# question-reponse data
str(cyber.security.5.question.response) # check structure and identify date columns
#remove empty datasets
str(cyber.security.1.question.response)
str(cyber.security.2.question.response)
str(cyber.security.3.question.response)
str(cyber.security.4.question.response)
str(cyber.security.5.question.response)
str(cyber.security.6.question.response)
str(cyber.security.7.question.response)
#remove empty datasets
str(cyber.security.1.question.response)
str(cyber.security.2.question.response)
str(cyber.security.3.question.response)
str(cyber.security.4.question.response)
str(cyber.security.5.question.response)
str(cyber.security.6.question.response)
str(cyber.security.7.question.response)
#add courseID columns
cyber.security.1.question.response$courseID <- 1
cyber.security.2.question.response$courseID <- 2
cyber.security.3.question.response$courseID <- 3
cyber.security.4.question.response$courseID <- 4
cyber.security.5.question.response$courseID <- 5
cyber.security.6.question.response$courseID <- 6
cyber.security.7.question.response$courseID <- 7
View(cyber.security.1.question.response)
#merge datasets
qaData <- rbind(cyber.security.1.question.response, cyber.security.2.question.response, cyber.security.3.question.response,
cyber.security.4.question.response, cyber.security.5.question.response, cyber.security.6.question.response,
cyber.security.7.question.response)
str(quData)
str(qaData)
#Convert courseID to factor
qaData$courseID <- factor(qaData$courseID)
str(qaData)
View(leavingSurveyData)
#Convert courseID to factor
leavingSurveyData$courseID <- factor(leavingSurveyData$courseID)
#View(leavingSurveyData)
str(leavingSurveyData)
#?
str(qaData)
#?
View(quData)
#?
View(qaData)
qaData$cloze_response
qaData$cloze_response <- factor(qaData$cloze_response)
levels(qaData$cloze_response)
#Delete the cloze response column
#qaData$cloze_response <- factor(qaData$cloze_response) # turn column into factor
#levels(qaData$cloze_response) # confirm column empty
qaData$cloze_response <- NULL
qaData$cloze_response
view(qaData)
View(qaData)
#?
View(qaData)
#?
View(qaData)
#Create submitted_date column
qaData$submitted_date <- as.Date(as.character(qaData$submitted_at))
View(qaData)
str(qaData)
rm(x)
#Convert integer columns to characters
x <- as.character(qaData$week_number)
x
#Convert integer columns to characters
x <- factor(qaData$week_number)
x
summary(cyber.security.5.question.response)
#Convert integer columns to factors
qaData$week_number <- factor(qaData$week_number)
levels(qaData$week_number)
class(qaData$week_number)
str(qaData)
qaData$step_number <- factor(qaData$step_number)
qaData$question_number <- factor(qaData$question_number)
class(qaData$question_number) #testing
levels(qaData$question_number) #testing
#?
#View(qaData)
str(qaData)
#Remove redundant datasets
rm(cyber.security.1.question.response, cyber.security.2.question.response, cyber.security.3.question.response,
cyber.security.4.question.response, cyber.security.5.question.response, cyber.security.6.question.response,
cyber.security.7.question.response)
rm(x)
# Preprocessing script 01-E
# Step activity data
str(cyber.security.1.step.activity) # check structure and identify date columns
summary(cyber.security.5.question.response) # gain familiarity with general properties of the data
summary(cyber.security.1.step.activity) # gain familiarity with general properties of the data
1
# Preprocessing script 01-E
# Step activity data
str(cyber.security.1.step.activity) # check structure and identify date columns
# Preprocessing script 01-E
# Step activity data
str(cyber.security.7.step.activity) # check structure and identify date columns
summary(cyber.security.7.step.activity) # gain familiarity with general properties of the data
#assign course ID
cyber.security.1.step.activity$courseID <- 1
cyber.security.1.step.activity$courseID <- 2
cyber.security.1.step.activity$courseID <- 3
cyber.security.1.step.activity$courseID <- 4
cyber.security.1.step.activity$courseID <- 5
cyber.security.1.step.activity$courseID <- 6
cyber.security.1.step.activity$courseID <- 7
#assign course ID
cyber.security.1.step.activity$courseID <- 1
cyber.security.2.step.activity$courseID <- 2
cyber.security.3.step.activity$courseID <- 3
cyber.security.4.step.activity$courseID <- 4
cyber.security.5.step.activity$courseID <- 5
cyber.security.6.step.activity$courseID <- 6
cyber.security.7.step.activity$courseID <- 7
#merge datasets
activityData <- rbind(cyber.security.1.step.activity, cyber.security.2.step.activity, cyber.security.3.step.activity,
cyber.security.4.step.activity, cyber.security.5.step.activity, cyber.security.6.step.activity,
cyber.security.7.step.activity)
#do other stuff
str(activityData)
#convert courseID to factor
activityData$courseID <- factor(activityData$courseID)
#do more stuff
str(activityData$courseID)
#do more stuff
str(activityData)
#convert week_number and step_number to characters
activityData$week_number <- as.character(activityData$week_number)
activityData$step_number <- as.character(activityData$step_number)
str(activityData)
#concatenate week_number and step_number to overwrite step column
activityData$step <- paste(activityData$week_number, activityData$step_number, sep = ".")
activityData$step
activityData$week_number <- factor(activityData$week_number)
activityData$step_number <- factor(activityData$step_number)
activityData$step <- factor(activityData$step)
#
str(activityData)
#Create date columns from factor columns
activityData$first_visited_date <- as.Date(as.character(activityData$first_visited_at))
str(activityData)
activityData$last_completed_date <- as.Date(as.character(activityData$last_completed_at))
str(activityData)
activityData$last_completed_at
activityData$last_completed_at <- na_if(activityData$last_completed_at, "")
activityData$last_completed_at
#activityData$last_completed_at
activityData$last_completed_date <- as.Date(as.character(activityData$last_completed_at))
str(activityData)
#testing
View(activityData)
#remove redundant datasets
rm(cyber.security.1.step.activity, cyber.security.2.step.activity, cyber.security.3.step.activity,
cyber.security.4.step.activity, cyber.security.5.step.activity, cyber.security.6.step.activity,
cyber.security.7.step.activity)
View(cyber.security.1.weekly.sentiment.survey.responses)
View(cyber.security.2.weekly.sentiment.survey.responses)
View(cyber.security.3.weekly.sentiment.survey.responses)
View(cyber.security.4.weekly.sentiment.survey.responses)
View(cyber.security.5.weekly.sentiment.survey.responses)
View(cyber.security.6.weekly.sentiment.survey.responses)
View(cyber.security.6.weekly.sentiment.survey.responses)
View(cyber.security.7.weekly.sentiment.survey.responses)
# Preprocessing script 01-F
# Weekly sentiment data
str(cyber.security.7.weekly.sentiment.survey.responses) # check structure and identify date columns
summary(cyber.security.7.weekly.sentiment.survey.responses) # gain familiarity with general properties of the data
#Remove empty datasets
rm(cyber.security.1.weekly.sentiment.survey.responses, cyber.security.2.weekly.sentiment.survey.responses,
cyber.security.3.weekly.sentiment.survey.responses, cyber.security.4.weekly.sentiment.survey.responses)
#merge datasets
sentimentData <- rbind(cyber.security.5.weekly.sentiment.survey.responses,
cyber.security.6.weekly.sentiment.survey.responses,
cyber.security.7.weekly.sentiment.survey.responses)
str(sentimentData)
#convert experience_rating to factor
sentimentData$experience_rating <- factor(sentimentData$experience_rating)
levels(sentimentData$experience_rating)
str(sentimentData)
sentimentData$week_number <- factor(sentimentData$week_number)
levels(sentimentData$week_number) #checking factor levels
# Preprocessing script 01-F
# Weekly sentiment data
#str(cyber.security.7.weekly.sentiment.survey.responses) # check structure and identify date columns
summary(cyber.security.7.weekly.sentiment.survey.responses) # gain familiarity with general properties of the data
# Preprocessing script 01-F
# Weekly sentiment data
#str(cyber.security.7.weekly.sentiment.survey.responses) # check structure and identify date columns
summary(cyber.security.6.weekly.sentiment.survey.responses) # gain familiarity with general properties of the data
levels(sentimentData$week_number) #checking factor levels
# Preprocessing script 01-F
# Weekly sentiment data
#str(cyber.security.7.weekly.sentiment.survey.responses) # check structure and identify date columns
summary(cyber.security.5.weekly.sentiment.survey.responses) # gain familiarity with general properties of the data
str(sentimentData)
#create responded_date column
sentimentData$responded_date <- as.Date(as.character(sentimentData$responded_at))
str(sentimentData)
#remove redundant datasets
rm(cyber.security.5.weekly.sentiment.survey.responses,
cyber.security.6.weekly.sentiment.survey.responses,
cyber.security.7.weekly.sentiment.survey.responses)
View(cyber.security.2.team.members)
View(cyber.security.7.video.stats)
# Preprocessing script 01-G
# team member data
str(cyber.security.2.team.members) # check structure and identify date columns
summary(cyber.security.2.team.members) # gain familiarity with general properties of the data
# Preprocessing script 01-G
# team member data
str(cyber.security.3.team.members) # check structure and identify date columns
# Preprocessing script 01-G
# team member data
str(cyber.security.4.team.members) # check structure and identify date columns
# Preprocessing script 01-G
# team member data
str(cyber.security.5.team.members) # check structure and identify date columns
# Preprocessing script 01-G
# team member data
str(cyber.security.6.team.members) # check structure and identify date columns
# Preprocessing script 01-G
# team member data
str(cyber.security.7.team.members) # check structure and identify date columns
library(ProjectTemplate)
load.project()
View(archetypeData)
View(enrollmentData)
View(leavingSurveyData)
View(qaData)
View(sentimentData)
View(sentimentData)
# Preprocessing script 01-H
# Team member data
str(cyber.security.7.team.members) # check structure and identify date columns
summary(cyber.security.2.team.members) # gain familiarity with general properties of the data
View(cyber.security.2.team.members)
#Assign courseID
cyber.security.2.team.members$courseID <- 2
cyber.security.3.team.members$courseID <- 3
cyber.security.4.team.members$courseID <- 4
cyber.security.5.team.members$courseID <- 5
cyber.security.6.team.members$courseID <- 6
cyber.security.7.team.members$courseID <- 7
# Preprocessing script 01-H
# Team member data
str(cyber.security.2.team.members) # check structure and identify date columns
# Preprocessing script 01-H
# Team member data
str(cyber.security.3.team.members) # check structure and identify date columns
# Preprocessing script 01-H
# Team member data
str(cyber.security.4.team.members) # check structure and identify date columns
# Preprocessing script 01-H
# Team member data
str(cyber.security.5.team.members) # check structure and identify date columns
# Preprocessing script 01-H
# Team member data
str(cyber.security.6.team.members) # check structure and identify date columns
# Preprocessing script 01-H
# Team member data
str(cyber.security.7.team.members) # check structure and identify date columns
summary(cyber.security.7.team.members) # gain familiarity with general properties of the data
#Merge datasets
teamData <- rbind(cyber.security.2.team.members, cyber.security.3.team.members, cyber.security.4.team.members,
cyber.security.5.team.members, cyber.security.6.team.members, cyber.security.7.team.members)
View(teamData)
#Remove first name and last name columns (no need to retain due to anonymisation)
teamData$first_name <- NULL
teamData$last_name <- NULL
str(teamData)
#Remove redundant datasets
rm(cyber.security.2.team.members, cyber.security.3.team.members, cyber.security.4.team.members,
cyber.security.5.team.members, cyber.security.6.team.members, cyber.security.7.team.members)
# Preprocessing script 01-H
# Team member data
str(cyber.security.3.video.stats) # check structure and identify date columns
summary(cyber.security.3.video.stats) # gain familiarity with general properties of the data
View(cyber.security.3.video.stats)
# Preprocessing script 01-H
# Team member data
str(cyber.security.4.video.stats) # check structure and identify date columns
# Preprocessing script 01-H
# Team member data
str(cyber.security.5.video.stats) # check structure and identify date columns
# Preprocessing script 01-H
# Team member data
str(cyber.security.6.video.stats) # check structure and identify date columns
summary(cyber.security.7.video.stats) # gain familiarity with general properties of the data
#Assign CourseID
cyber.security.3.video.stats$courseID <- 3
cyber.security.4.video.stats$courseID <- 4
cyber.security.5.video.stats$courseID <- 5
cyber.security.6.video.stats$courseID <- 6
cyber.security.7.video.stats$courseID <- 7
# Preprocessing script 01-H
# Video stats data
#str(cyber.security.7.video.stats) # check structure and identify date columns
#summary(cyber.security.7.video.stats) # gain familiarity with general properties of the data
View(cyber.security.7.video.stats) # view data; gain familiarity.
#Merge datasets
rawVideoStats <- rbind(cyber.security.3.video.stats, cyber.security.4.video.stats, cyber.security.5.video.stats, cyber.security.6.video.stats, cyber.security.7.video.stats)
#?
library(reshape2)
#Unpivot
#library(reshape2) # should be set to auto-load in config
?melt
str(rawVideoStats)
geographicVidData <- rawVideoStats[, c("step_position")]
rm(geographicVidData)
#Conversion to factors
rawVideoStats$courseID <- factor(rawVideoStats$courseID)
str(rawVideoStats)
View(teamData)
#Convert courseID to factor
teamData$courseID <- factor(teamData$courseID)
str(teamData) #checking data structure
str(rawVideoStats)
rawVideoStats$step_position <- factor(rawVideoStats$step_position)
str(rawVideoStats)
geographicVidData <- rawVideoStats[, c("courseID", "step_position", "title", "europe_views_percentage",
"oceania_views_percentage", "asia_views_percentage", "north_america_views_percentage", "south_america_views_percentage",
"africa_views_percentage", "antarctica_views_percentage")]
str(geographicVidData)
View(geographicVidData)
#View(geographicVidData)# quick check
?melt
geographicVidData <- melt(data = rawVideoStats, id.vars = c("courseID", "step_position", "title"),
measure.vars = c("europe_views_percentage", "oceania_views_percentage", "asia_views_percentage",
"north_america_views_percentage", "south_america_views_percentage",
"africa_views_percentage", "antarctica_views_percentage"),
value.name = "views_percentage")
geographicVidData <- melt(data = rawVideoStats, id.vars = c("courseID", "step_position", "title"),
measure.vars = c("europe_views_percentage", "oceania_views_percentage", "asia_views_percentage",
"north_america_views_percentage", "south_america_views_percentage",
"africa_views_percentage", "antarctica_views_percentage"),
value.name = "views_percentage", variable.name = "region")
#Create geographic dataset
geographicVidData <- rawVideoStats[, c("courseID", "step_position", "title", "europe_views_percentage",
"oceania_views_percentage", "asia_views_percentage", "north_america_views_percentage", "south_america_views_percentage",
"africa_views_percentage", "antarctica_views_percentage")]
geographicVidData <- melt(data = rawVideoStats, id.vars = c("courseID", "step_position", "title"),
measure.vars = c("europe_views_percentage", "oceania_views_percentage", "asia_views_percentage",
"north_america_views_percentage", "south_america_views_percentage",
"africa_views_percentage", "antarctica_views_percentage"),
value.name = "views_percentage", variable.name = "region")
str(geographicVidData)
?gsub
geographicVidData$region <- gsub("europe_views_percentage", "Europe", geographicVidData$region)
str(geographicVidData) #quick check
geographicVidData$region <- gsub("oceania_views_percentage", "Oceania", geographicVidData$region)
geographicVidData$region <- gsub("asia_views_percentage", "Asia", geographicVidData$region)
geographicVidData$region <- gsub("north_america_views_percentage", "North America", geographicVidData$region)
geographicVidData$region <- gsub("south_america_views_percentage", "South America", geographicVidData$region)
geographicVidData$region <- gsub("africa_views_percentage", "Africa", geographicVidData$region)
geographicVidData$region <- gsub("antarctica_views_percentage", "Antartica", geographicVidData$region)
str(geographicVidData) #quick check
geographicVidData$region <- factor(geographicVidData$region)
str(geographicVidData) #quick check
levels(geographicVidData$region)
str(rawVideoStats)
View(project.info)
#Create device video dataset
deviceVidData <- rawVideoStats[, c("courseID", "step_position", "title", "console_device_percentage",
"desktop_device_percentage", "mobile_device_percentage", "tv_device_percentage", "tablet_device_percentage",
"unknown_device_percentage")]
View(deviceVidData)
str(deviceVidData)
str(rawVideoStats)
#Create device video dataset
deviceVidData <- melt(data = rawVideoStats, id.vars = c("courseID", "step_position", "title"),
measure.vars = c("desktop_device_percentage", "mobile_device_percentage", "tv_device_percentage",
"tablet_device_percentage", "unknown_device_percentage"),
value.name = "device_use_percentage", variable.name = "device") #melt data to create new dataset
str(deviceVidData) #quick check
View(deviceVidData) #quick check
deviceVidData$device <- gsub("desktop_device_percentage","Desktop", deviceVidData$device)
deviceVidData$device <- gsub("mobile_device_percentage","Mobile", deviceVidData$device)
deviceVidData$device <- gsub("tv_device_percentage","TV", deviceVidData$device)
deviceVidData$device <- gsub("tablet_device_percentage","Tablet", deviceVidData$device)
deviceVidData$device <- gsub("unknown_device_percentage","Unknown", deviceVidData$device)
deviceVidData$device <- factor(deviceVidData$device)
str(deviceVidData) #quick check
View(deviceVidData) #quick check
levels(deviceVidData$device)
str(rawVideoStats)
#Create viewing duration dataset
viewDurData <- melt(data = rawVideoStats, id.vars = c("courseID", "step_position", "title"),
measure.vars = c("viewed_five_percent", "viewed_ten_percent", "viewed_twentyfive_percent",
"viewed_fifty_percent", "viewed_seventyfive_percent", "viewed_ninetyfive_percent",
"viewed_onehundred_percent"),
value.name = "viewed_duration_percentage", variable.name = "duration_percentage")
viewDurData <-
str(viewDurData)
View(viewDurData)
#Create geographic video dataset
geographicVidData <- melt(data = rawVideoStats, id.vars = c("courseID", "step_position", "title"),
measure.vars = c("europe_views_percentage", "oceania_views_percentage", "asia_views_percentage",
"north_america_views_percentage", "south_america_views_percentage",
"africa_views_percentage", "antarctica_views_percentage"),
value.name = "views_percentage", variable.name = "region") #melt data to create new dataset
#levels(geographicVidData$region) #quick check
#str(geographicVidData) #quick check
View(geographicVidData)# quick check
geographicVidData$region <- gsub("europe_views_percentage", "Europe", geographicVidData$region)
geographicVidData$region <- gsub("oceania_views_percentage", "Oceania", geographicVidData$region)
geographicVidData$region <- gsub("asia_views_percentage", "Asia", geographicVidData$region)
geographicVidData$region <- gsub("north_america_views_percentage", "North America", geographicVidData$region)
geographicVidData$region <- gsub("south_america_views_percentage", "South America", geographicVidData$region)
geographicVidData$region <- gsub("africa_views_percentage", "Africa", geographicVidData$region)
geographicVidData$region <- gsub("antarctica_views_percentage", "Antartica", geographicVidData$region)
geographicVidData$region <- factor(geographicVidData$region)
#levels(geographicVidData$region) #quick check
#str(geographicVidData) #quick check
View(geographicVidData)# quick check
#Create viewing duration dataset
viewDurData <- melt(data = rawVideoStats, id.vars = c("courseID", "step_position", "title"),
measure.vars = c("viewed_five_percent", "viewed_ten_percent", "viewed_twentyfive_percent",
"viewed_fifty_percent", "viewed_seventyfive_percent", "viewed_ninetyfive_percent",
"viewed_onehundred_percent"),
value.name = "viewed_duration_percentage", variable.name = "duration_percentage")
viewDurData <-
str(viewDurData)
View(viewDurData)
summary(viewDurData)
str(viewDurData)
#Create viewing duration dataset
viewDurData <- melt(data = rawVideoStats, id.vars = c("courseID", "step_position", "title"),
measure.vars = c("viewed_five_percent", "viewed_ten_percent", "viewed_twentyfive_percent",
"viewed_fifty_percent", "viewed_seventyfive_percent", "viewed_ninetyfive_percent",
"viewed_onehundred_percent"),
value.name = "viewed_duration_percentage", variable.name = "duration_percentage")
str(viewDurData)
summary(viewDurData)
View(viewDurData)
str(rawVideoStats)
viewDurData$duration_percentage <- gsub("viewed_five_percent", "5%", viewDurData$duration_percentage)
viewDurData$duration_percentage <- gsub("viewed_ten_percent", "10%", viewDurData$duration_percentage)
viewDurData$duration_percentage <- gsub("viewed_twentyfive_percent", "25%", viewDurData$duration_percentage)
viewDurData$duration_percentage <- gsub("viewed_fifty_percent", "50%", viewDurData$duration_percentage)
viewDurData$duration_percentage <- gsub("viewed_seventyfive_percent", "75%", viewDurData$duration_percentage)
viewDurData$duration_percentage <- gsub("viewed_ninetyfive_percent", "95%", viewDurData$duration_percentage)
viewDurData$duration_percentage <- gsub("viewed_onehundred_percent", "100%", viewDurData$duration_percentage)
viewDurData$duration_percentage <- factor(viewDurData$duration_percentage)
levels(viewDurData$duration_percentage)
View(viewDurData) #quick check
viewDurData$duration_percentage <- as.integer(viewDurData$duration_percentage)
summary(viewDurData$duration_percentage) #quick check
#Create viewing duration dataset
viewDurData <- melt(data = rawVideoStats, id.vars = c("courseID", "step_position", "title"),
measure.vars = c("viewed_five_percent", "viewed_ten_percent", "viewed_twentyfive_percent",
"viewed_fifty_percent", "viewed_seventyfive_percent", "viewed_ninetyfive_percent",
"viewed_onehundred_percent"),
value.name = "viewed_duration_percentage", variable.name = "duration_percentage") #melt data to create new dataset
viewDurData$duration_percentage <- gsub("viewed_five_percent", "5", viewDurData$duration_percentage)
viewDurData$duration_percentage <- gsub("viewed_ten_percent", "10", viewDurData$duration_percentage)
viewDurData$duration_percentage <- gsub("viewed_twentyfive_percent", "25", viewDurData$duration_percentage)
viewDurData$duration_percentage <- gsub("viewed_fifty_percent", "50", viewDurData$duration_percentage)
viewDurData$duration_percentage <- gsub("viewed_seventyfive_percent", "75", viewDurData$duration_percentage)
viewDurData$duration_percentage <- gsub("viewed_ninetyfive_percent", "95", viewDurData$duration_percentage)
viewDurData$duration_percentage <- gsub("viewed_onehundred_percent", "100", viewDurData$duration_percentage)
viewDurData$duration_percentage <- as.integer(viewDurData$duration_percentage)
summary(viewDurData$duration_percentage) #quick check
str(viewDurData) #quick check
summary(viewDurData) #quick check
View(viewDurData) #quick check
str(rawVideoStats)
View(cyber.security.3.video.stats)
View(cyber.security.4.video.stats)
View(cyber.security.5.video.stats)
View(cyber.security.6.video.stats)
View(cyber.security.7.video.stats)
#remove redundant datasets
rm(cyber.security.3.video.stats, cyber.security.4.video.stats, cyber.security.5.video.stats,
cyber.security.6.video.stats, cyber.security.7.video.stats)
View(enrollmentData)
library(ProjectTemplate)
load.project()
#Plot 1: frequency of archetypes
ggplot(data = archetypeData, aes(x = archetype, fill = archetype)) +
geom_bar()
?facet
?ggplot.facet
